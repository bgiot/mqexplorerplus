<!--
	Copyright (c) DOT Consulting scrl. All rights reserved.
	Licensed under the provided EULA. See EULA file in the solution root for full license information. 
-->
<UserControl x:Class="Dotc.MQExplorerPlus.Views.PutMessageView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:viewModels="clr-namespace:Dotc.MQExplorerPlus.Core.ViewModels;assembly=Dotc.MQExplorerPlus.Core"
             xmlns:converters="clr-namespace:Dotc.MQExplorerPlus.Converters"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:behaviors="clr-namespace:Dotc.MQExplorerPlus.Behaviors"
             mc:Ignorable="d"
             d:DesignHeight="450"
             d:DesignWidth="500"
             d:DataContext="{d:DesignInstance viewModels:PutMessageViewModel}"
             Height="450"
             Width="500">
    <UserControl.Resources>
        <converters:PutMessageModeConverter x:Key="PutMessageModeConverter" />
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="30" />
        </Grid.RowDefinitions>
        <GroupBox Grid.Row="0"
                  Header="Destination Queue"
                  Margin="2"
                  Padding="0 4">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Label Grid.Row="0"
                       Grid.Column="0">Queue Name:</Label>
                <Label Grid.Row="1"
                       Grid.Column="0">Queue Manager:</Label>
                <TextBox Grid.Row="0"
                         Height="22"
                         Grid.Column="1"
                         IsReadOnly="True"
                         Text="{Binding Queue.Name, Mode=OneWay}" />
                <TextBox Grid.Row="1"
                         Height="22"
                         Grid.Column="1"
                         IsReadOnly="True"
                         Text="{Binding Queue.QueueManager.ConnectionInfo, Mode=OneWay}" />
            </Grid>
        </GroupBox>
        <GroupBox Grid.Row="1"
                  Header="Properties"
                  Margin="2"
                  Padding="0 4">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>

            <StackPanel Orientation="Horizontal">
                <Label>Priority:</Label>
                <TextBox Height="22" IsEnabled="{Binding IsIdle}"
                         Width="30"
                         Text="{Binding Priority, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" />
                <Label Margin="10 0 0 0">Character Set:</Label>
                <TextBox Height="22"
                         IsEnabled="{Binding IsIdle}"
                         Width="50"
                         Text="{Binding CharacterSet, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" />
            </StackPanel>
                <Grid Grid.Row="1" Margin="5 10 0 10" HorizontalAlignment="Left">
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <CheckBox IsChecked="{Binding SetCorrelationId}" Height="22">Set Correlation Id</CheckBox>
                    <TextBox Grid.Row="1"
                             Text="{Binding CorrelationId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                             Margin="10 0 0 0"
                             Width="370"
                             Height="22"
                             IsEnabled="{Binding SetCorrelationId}">
                        <i:Interaction.Behaviors>
                            <behaviors:TextBoxInputRegExBehavior RegularExpression="^[a-fA-F0-9]{0,48}$"
                                                                 MaxLength="48" />
                        </i:Interaction.Behaviors>
                    </TextBox>
                    <Button Grid.Row="1"
                            Grid.Column="1" Command="{Binding GenerateCorrelationIdCommand}" Margin="5 0 0 0">
                        <Image Source="{StaticResource NewImageSource}" Height="18" />
                    </Button>
                </Grid>
            </Grid>
        </GroupBox>
        <GroupBox Grid.Row="2"
                  Header="Content"
                  Margin="2"
                  Padding="0 4">
            <TabControl SelectedIndex="{Binding Mode, Converter={StaticResource PutMessageModeConverter}, Mode=TwoWay}">
                <TabItem Header="Single Message">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <TextBox Grid.Row="0" Margin="4"
                                 IsEnabled="{Binding IsIdle}"
                                 x:Name="UxStartFocusField"
                                 VerticalScrollBarVisibility="Visible"
                                 HorizontalScrollBarVisibility="Auto"
                                 AcceptsReturn="True"
                                 Text="{Binding MessageContent, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}">
                            <TextBox.Style>
                                <Style TargetType="TextBox">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=IsChecked, ElementName=uxWrapText}"
                                                     Value="True">
                                            <Setter Property="TextWrapping"
                                                    Value="Wrap" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBox.Style>
                        </TextBox>
                        <CheckBox Grid.Row="1"
                                  Padding="2"
                                  Name="uxWrapText"
                                  IsEnabled="{Binding IsIdle}"
                                  VerticalContentAlignment="Center"
                                  HorizontalAlignment="Right">Wrap</CheckBox>
                    </Grid>
                </TabItem>
                <TabItem Header="From Text File">
                    <Grid Margin="4"> 
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="30" />
                            <RowDefinition Height="10" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Row="0" Margin="4 0 0 0">Select File:</TextBlock>
                        <TextBox Grid.Row="1" Grid.Column="0" Margin="4" Height="22" Text="{Binding Filename, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Delay=300}" />
                        <Button Grid.Column="1"
                                Margin="0 4 4 4"
                                Command="{Binding SelectFileCommand}"
                                Grid.Row="1"><Image Height="18" Source="{StaticResource OpenImageSource}" /></Button>
                        <CheckBox Grid.Row="2"
                                  IsEnabled="{Binding IsIdle}"
                                  Height="24"
                                  Margin="4 0 0 0"
                                  VerticalAlignment="Center"
                                  IsChecked="{Binding SkipBlankLines}"
                                  Grid.Column="0">Skip blank lines</CheckBox>
                        <TextBlock Grid.Row="4" Margin="4 0" Visibility="{Binding FileIsValid, Converter={StaticResource BooleanToVisibilityConverter}}"
                                   Grid.Column="0"
                                   FontStyle="Italic"
                                   Text="{Binding LinesCountInFile,  StringFormat='{}The file contains {0} message(s)'}" />
                        <TextBlock Grid.Row="4"
                                   Margin="4 0"
                                   Visibility="Hidden"
                                   Grid.Column="0"
                                   Foreground="Red"
                                   Text="We encountered an error reading the file!">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding FileIsValid}"
                                                     Value="False">
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                    </Style.Triggers> 
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </Grid>
                </TabItem>
            </TabControl>

        </GroupBox>
        <Grid Grid.Row="3">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Button Grid.Column="0"
                    Margin="10 3 3 3"
                    Height="22"
                    Width="60"
                    Command="{Binding ResetCommand}">Reset</Button>
            <CheckBox Grid.Column="1"
                      IsEnabled="{Binding IsIdle}"
                      Height="22"
                      Margin="10 3 3 3"
                      VerticalContentAlignment="Center"
                      IsChecked="{Binding CloseAfterPut}">Close after sending message.</CheckBox>
            <TextBlock Grid.Column="2"
                       Text="{Binding MessageInfo, FallbackValue='One message sent.', NotifyOnTargetUpdated=True}"
                       VerticalAlignment="Center"
                       Margin="20 0"
                       Foreground="Blue"
                       HorizontalAlignment="Right">
                <TextBlock.Style>
                    <Style>
                        <Style.Triggers>
                            <EventTrigger RoutedEvent="Binding.TargetUpdated">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation BeginTime="0:0:0"
                                                         Duration="0:0:0.5"
                                                         Storyboard.TargetProperty="Opacity"
                                                         From="0.0"
                                                         To="1.0" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style></TextBlock>
            <Grid Grid.Column="2"
                    Height="18"
                    Margin="30 0 10 0"
                    Visibility="{Binding Progress.Active, Converter={StaticResource BooleanToVisibilityConverter}}">
                <ProgressBar Name="UxProgress"
                             Minimum="{Binding Progress.From, Mode=OneWay}"
                             Maximum="{Binding Progress.To, Mode=OneWay}"
                             Value="{Binding Progress.Current, Mode=OneWay}" />
                <TextBlock TextAlignment="Center" Foreground="White">
                    <TextBlock.Text>
                        <MultiBinding StringFormat="{}{0}/{1}">
                            <Binding Path="Value"
                                     ElementName="UxProgress" />
                            <Binding Path="Maximum"
                                     ElementName="UxProgress" />
                        </MultiBinding>
                    </TextBlock.Text></TextBlock>
            </Grid>

        </Grid>
    </Grid>
</UserControl>
