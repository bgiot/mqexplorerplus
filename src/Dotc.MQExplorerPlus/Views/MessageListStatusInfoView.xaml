<!--
	Copyright (c) DOT Consulting scrl. All rights reserved.
	Licensed under the provided EULA. See EULA file in the solution root for full license information. 
-->
<UserControl x:Class="Dotc.MQExplorerPlus.Views.MessageListStatusInfoView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Dotc.MQExplorerPlus.Views"
             xmlns:designTime="clr-namespace:Dotc.MQExplorerPlus.DesignTime"
             xmlns:viewModels="clr-namespace:Dotc.MQExplorerPlus.Core.ViewModels;assembly=Dotc.MQExplorerPlus.Core"
             mc:Ignorable="d" 
             d:DesignHeight="100" d:DesignWidth="900">
    <StatusBar  Padding="5 0"
                Height="28"
                d:DataContext="{d:DesignInstance Type=viewModels:MessageListStatusInfo}">
        <StatusBarItem MinWidth="100">
            <StackPanel Orientation="Horizontal">
            <TextBlock>
                <TextBlock.Text>
                    <MultiBinding StringFormat="{}{0} of {1} selected">
                        <Binding Path="SelectedCount" />
                        <Binding Path="TotalCount" />
                    </MultiBinding>
                </TextBlock.Text></TextBlock>
                <TextBlock Margin="2 0 0 0"
                           Text="{Binding  Owner.MemorySearchCache.Length, StringFormat='{}(from {0})'}" />
            </StackPanel>
        </StatusBarItem>
        <Separator />
        <StatusBarItem Width="Auto"
                       DataContext="{Binding Owner.Queue}">
            <TextBlock Padding="0 0 10 0"
                       Text="{Binding Type, Converter={StaticResource WsQueueTypeNameConverter}, ConverterParameter='{}Type: {0}'}" />
        </StatusBarItem>
        <Separator />
        <StatusBarItem MinWidth="80"
                       Width="Auto"
                       DataContext="{Binding Owner.Queue}">
            <TextBlock Text="{Binding Depth, StringFormat='{}Depth: {0}', TargetNullValue='Depth: ?'}" />
        </StatusBarItem>
        <Separator />
        <StatusBarItem MinWidth="120"
                       Width="Auto"
                       DataContext="{Binding Owner.Queue}">
            <TextBlock Text="{Binding ExtendedProperties.UncommittedCount, StringFormat='{}Uncommitted: {0}', FallbackValue='Uncommitted: ?', TargetNullValue='Uncommitted: ?'}"
                       d:DataContext="{d:DesignInstance designTime:QueueInfoExtDesignTime}" />
        </StatusBarItem>
        <Separator />
        <StatusBarItem>
            <ComboBox ItemsSource="{Binding Owner.AvailableConverters}"
                      Background="Transparent"
                      Foreground="White"
                      Style="{DynamicResource StatusBarComboBoxStyle}"
                      Width="70"
                      DisplayMemberPath="Label"
                      SelectedValuePath="Value"
                      SelectedValue="{Binding Owner.CurrentConverter}"
                      FontSize="11"></ComboBox>
        </StatusBarItem>
        <Separator />        
        <StatusBarItem Width="Auto">
            <TextBlock DataContext="{Binding Owner.Queue.GetStatus}"
                       Padding="5 0 5 0"
                       Text="Get"
                       Style="{StaticResource PutGetStatusHighlight}" />
        </StatusBarItem>
        <Separator />
        <StatusBarItem Width="Auto">
            <TextBlock DataContext="{Binding Owner.Queue.PutStatus}"
                       Padding="5 0 5 0"
                       Text="Put"
                       Style="{StaticResource PutGetStatusHighlight}" />
        </StatusBarItem>
        <Separator />
        <StatusBarItem Width="130">
            <TextBlock>
                <TextBlock.Text>
                    <MultiBinding StringFormat="{}Last update: {0:HH:mm:ss}">
                        <Binding Path="LastUpdateTimestamp" />
                    </MultiBinding>
                </TextBlock.Text></TextBlock>
        </StatusBarItem>
        <Separator />
        <StatusBarItem MinWidth="130"
                       Width="Auto">
            <TextBlock Text="{Binding ConnectionInformation}" />
        </StatusBarItem>
        <Separator />
        <StatusBarItem>
            <Grid>
                <TextBlock Visibility="{Binding Countdown.IsOn, Converter={StaticResource BooleanToVisibilityConverter}}"
                           Text="{Binding Countdown.CurrentCountdown, StringFormat='{}Auto refresh in {0} sec.'}" />
                <Grid  Visibility="{Binding Owner.Progress.Active, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <!--<Button   Grid.Column="0"
                              Visibility="{Binding Owner.SupportActionCancellation, Converter={StaticResource BooleanToVisibilityConverter}}"
                              Command="{Binding Owner.CancelRunningActionCommand}"
                              Margin="0 0 5 0">
                        <Button.Template>
                            <ControlTemplate>
                                <Image Source="{StaticResource CancelImageSource}" />
                            </ControlTemplate>
                        </Button.Template>
                    </Button>-->
                    <ProgressBar x:Name="UxProgress"
                                 Width="150"
                                 Height="18"
                                 Minimum="{Binding Owner.Progress.From, Mode=OneWay}"
                                 Maximum="{Binding Owner.Progress.To, Mode=OneWay}"
                                 Value="{Binding Owner.Progress.Current, Mode=OneWay}"
                                 IsIndeterminate="{Binding Owner.Progress.IsIndeterminate, Mode=OneWay}"
                                 Grid.Column="1" />
                    <!--<TextBlock TextAlignment="Center"
                               Grid.Column="1"
                               Visibility="{Binding Owner.Progress.IsDeterminate, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <TextBlock.Text>
                            <MultiBinding StringFormat="{}{0}/{1}">
                                <Binding Path="Value"
                                         ElementName="UxProgress" />
                                <Binding Path="Maximum"
                                         ElementName="UxProgress" />
                            </MultiBinding>
                        </TextBlock.Text></TextBlock>-->
                </Grid>
            </Grid>
        </StatusBarItem>
        <StatusBarItem />
    </StatusBar>
</UserControl>
