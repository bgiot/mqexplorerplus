<!--
	Copyright (c) DOT Consulting scrl. All rights reserved.
	Licensed under the provided EULA. See EULA file in the solution root for full license information. 
-->
<Window x:Class="Dotc.MQExplorerPlus.Views.ShellWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:avalon="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:view="clr-namespace:Dotc.MQExplorerPlus.Views"
        xmlns:converter="clr-namespace:Dotc.MQExplorerPlus.Converters"
        xmlns:viewModels="clr-namespace:Dotc.MQExplorerPlus.Core.ViewModels;assembly=Dotc.MQExplorerPlus.Core"
        xmlns:mvvm="clr-namespace:Dotc.Mvvm;assembly=Dotc.Mvvm"
        xmlns:models="clr-namespace:Dotc.MQExplorerPlus.Core.Models;assembly=Dotc.MQExplorerPlus.Core"
        xmlns:wpf="http://schemas.dotconsulting.be/wpf/xaml"
        mc:Ignorable="d"
        MinHeight="700"
        MinWidth="1024"
        Height="700"
        Width="1024"
        Title="{Binding Title}"
        WindowState="Normal"
        WindowStartupLocation="CenterScreen"
        Icon="{StaticResource SphereImageSource}"
        ShowInTaskbar="True"
        Style="{StaticResource WindowStyle}"
        d:DataContext="{d:DesignInstance viewModels:ShellViewModel}">
    <Window.Resources>
        <wpf:BindingProxy x:Key="RootDataContext"
                           Data="{Binding}" />
        <DataTemplate DataType="{x:Type viewModels:QueueListStatusInfo}">
            <view:QueueListStatusInfoView />
        </DataTemplate>
        <DataTemplate DataType="{x:Type viewModels:MessageListStatusInfo}">
            <view:MessageListStatusInfoView />
        </DataTemplate>
        <DataTemplate DataType="{x:Type viewModels:ChannelListStatusInfo}">
            <view:ChannelListStatusInfoView />
        </DataTemplate>
        <DataTemplate DataType="{x:Type viewModels:ListenerListStatusInfo}">
            <view:ListenerListStatusInfoView />
        </DataTemplate>
        <converter:BooleanToChildWindowStateConverter x:Key="BooleanToChildWindowStateConverter" />
    </Window.Resources>
    <Window.InputBindings>
        <KeyBinding Key="o"
                    Modifiers="Ctrl"
                    Command="{Binding ShellService.OpenQueueManagerCommand}" />
        <KeyBinding Key="o"
                    Modifiers="Ctrl+Shift"
                    Command="{Binding ShellService.OpenRemoteQueueManagerCommand}" />
        <KeyBinding Key="q"
                    Modifiers="Ctrl"
                    Command="{Binding ShellService.OpenQueueCommand}" />
        <KeyBinding Key="q"
                    Modifiers="Ctrl+Shift"
                    Command="{Binding ShellService.OpenRemoteQueueCommand}" />
        <KeyBinding Key="F4"
                    Modifiers="Alt"
                    Command="{Binding ShellService.ExitCommand}" />
        <KeyBinding Key="F5"
                    Command="{Binding ShellService.KeyboardCommands.F5Command}" />
        <KeyBinding Key="F5"
                    Modifiers="Ctrl"
                    Command="{Binding ShellService.KeyboardCommands.CtlF5Command}" />
    </Window.InputBindings>
    <Grid IsHitTestVisible="{Binding ShellService.IsIdle}">
        <avalon:ChildWindow IsModal="True"
                            DataContext="{Binding ViewService}"
                            Width="Auto" Height="Auto"
                            x:Name="UxModalWindow"
                            CloseButtonVisibility="Visible"
                            CloseButtonClicked="UxModalWindow_CloseButtonClicked"
                            Caption="{Binding CurrentModalViewModel.Title, FallbackValue=''}"
                            Visibility="{Binding IsModalOpened, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}"
                            IsVisibleChanged="ChildWindow_IsVisibleChanged"
                            Style="{StaticResource ChildWindowCustomStyle}"
                            SizeChanged="UxModalWindow_SizeChanged">
            <avalon:ChildWindow.Content>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="{Binding CurrentModalView.Height}" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <ContentPresenter Grid.Row="0" SizeChanged="UxModalWindow_SizeChanged"
                                      Content="{Binding CurrentModalView}" />
                    <Border Grid.Row="1"
                            Height="40"
                            Background="White"
                            BorderThickness="0 1 0 0"
                            BorderBrush="Gray"
                            Visibility="{Binding CurrentModalViewModel.ShowDefaultButtons, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <StackPanel Orientation="Horizontal"
                                    HorizontalAlignment="Right">
                            <Button Width="80"
                                    Height="24"
                                    Margin="0 0 10 0"
                                    Command="{Binding CurrentModalViewModel.OkCommand}"
                                    IsDefault="True">
                                <Button.Content>
                                    <TextBlock Text="{Binding CurrentModalViewModel.OkLabel}" />
                                </Button.Content>
                            </Button>
                            <Button Width="80"
                                    Height="24"
                                    Margin="0 0 10 0"
                                    Command="{Binding CurrentModalViewModel.CancelCommand}"
                                    IsCancel="True">
                                <Button.Content>
                                    <TextBlock  Text="{Binding CurrentModalViewModel.CancelLabel}" />
                                </Button.Content>
                            </Button>
                        </StackPanel>
                    </Border>
                </Grid>
            </avalon:ChildWindow.Content>
        </avalon:ChildWindow>
        <DockPanel>
            <Menu  DockPanel.Dock="Top"
                   Height="24"
                   Margin="5 0 0 0"
                   Background="Transparent">
                <MenuItem Header="FILE">
                    <MenuItem Header="Open Local Queue Manager..."
                              InputGestureText="Ctrl+O"
                              Command="{Binding ShellService.OpenQueueManagerCommand}" />
                    <MenuItem Header="Open Remote Queue Manager..."
                              InputGestureText="Ctrl+Shift+O"
                              Command="{Binding ShellService.OpenRemoteQueueManagerCommand}" />
                    <Separator />
                    <MenuItem Header="Open Local Queue..."
                              InputGestureText="Ctrl+Q"
                              Command="{Binding ShellService.OpenQueueCommand}" />
                    <MenuItem Header="Open Remote Queue..."
                              InputGestureText="Ctrl+Shift+Q"
                              Command="{Binding ShellService.OpenRemoteQueueCommand}" />
                    <Separator />
                    <MenuItem Header="Recent Connections">
                       <MenuItem.Style>
                           <Style TargetType="MenuItem">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Data.App.UserSettings.RecentConnections.Count, Source={StaticResource RootDataContext}}"
                                                 Value="0">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                </Style.Triggers>
                           </Style>
                       </MenuItem.Style>
                        <MenuItem.ItemsSource>
                            <CompositeCollection>
                                <CollectionContainer Collection="{Binding Data.App.UserSettings.RecentConnections, Source={StaticResource RootDataContext}}" />
                                <Separator/>
                                <MenuItem Header="Clear History"
                                          DataContext="{x:Null}"
                                          Command="{Binding Data.ShellService.ClearRecentConnectionsCommand, Source={StaticResource RootDataContext}}" />
                            </CompositeCollection>
                        </MenuItem.ItemsSource>
                        <MenuItem.ItemContainerStyle>
                            <Style TargetType="MenuItem">
                                <Setter Property="Command"
                                        Value="{Binding Data.ShellService.UseRecentConnectionCommand, Source={StaticResource RootDataContext}}" />
                                <Setter Property="CommandParameter"
                                        Value="{Binding}" />
                            </Style>
                        </MenuItem.ItemContainerStyle>
                        <MenuItem.Resources>
                            <DataTemplate DataType="{x:Type models:RecentQueueManagerConnection}">
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="{Binding Index, StringFormat='{}{0}. '}" />
                                    <Image Height="16" Margin="0 0 5 0" Source="{StaticResource ConnQmImageSource}"/>
                                    <TextBlock>
                                        <TextBlock.Text>
                                            <MultiBinding StringFormat="{}{0} ({1})">
                                                <Binding Path="QueueManagerName" />
                                                <Binding Path="ObjectNamePrefixLabel" />
                                            </MultiBinding>
                                        </TextBlock.Text></TextBlock>
                                </StackPanel>
                            </DataTemplate>
                            <DataTemplate DataType="{x:Type models:RecentQueueConnection}">
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="{Binding Index, StringFormat='{}{0}. '}" />
                                    <Image Height="16"
                                           Margin="0 0 5 0"
                                           Source="{StaticResource ConnQImageSource}" />
                                    <TextBlock>
                                        <TextBlock.Text>
                                            <MultiBinding StringFormat="{}{0}@{1}">
                                                <Binding Path="QueueName" />
                                                <Binding Path="QueueManagerName" />
                                            </MultiBinding>
                                        </TextBlock.Text></TextBlock>
                                </StackPanel>
                            </DataTemplate>
                            <DataTemplate DataType="{x:Type models:RecentRemoteQueueManagerConnection}">
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="{Binding Index, StringFormat='{}{0}. '}" />
                                    <Image Height="16"
                                           Margin="0 0 5 0"
                                           Source="{StaticResource ConnRemoteQmImageSource}" />
                                    <TextBlock>
                                        <TextBlock.Text>
                                            <MultiBinding StringFormat="{}{0} ({1}) [{5}@{2}/{3}/{4}]">
                                                <Binding Path="QueueManagerName" />
                                                <Binding Path="ObjectNamePrefixLabel" />
                                                <Binding Path="HostName" />
                                                <Binding Path="Port" />
                                                <Binding Path="Channel" />
                                                <Binding Path="UserId"
                                                         TargetNullValue="&lt;nobody&gt;" />
                                            </MultiBinding>
                                        </TextBlock.Text></TextBlock>
                                </StackPanel>
                            </DataTemplate>
                            <DataTemplate DataType="{x:Type models:RecentRemoteQueueConnection}">
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="{Binding Index, StringFormat='{}{0}. '}" />
                                    <Image Height="16"
                                           Margin="0 0 5 0"
                                           Source="{StaticResource ConnRemoteQImageSource}" />
                                    <TextBlock>
                                        <TextBlock.Text>
                                            <MultiBinding StringFormat="{}{0}@{1} [{5}@{2}/{3}/{4}]">
                                                <Binding Path="QueueName" />
                                                <Binding Path="QueueManagerName" />
                                                <Binding Path="HostName" />
                                                <Binding Path="Port" />
                                                <Binding Path="Channel" />
                                                <Binding Path="UserId" TargetNullValue="&lt;nobody&gt;" />
                                            </MultiBinding>
                                        </TextBlock.Text></TextBlock>
                                </StackPanel>
                            </DataTemplate>
                        </MenuItem.Resources>
                    </MenuItem>
                    <Separator/>
                    <MenuItem Header="Exit"
                              Command="{Binding ShellService.ExitCommand}"
                              InputGestureText="Alt+F4" />
                </MenuItem>
                <MenuItem Header="EDIT"
                          Visibility="Collapsed">
                    <MenuItem Command="{x:Static ApplicationCommands.Copy}" />
                    <MenuItem Command="{x:Static ApplicationCommands.Cut}" />
                    <MenuItem Command="{x:Static ApplicationCommands.Paste}" />
                    <MenuItem Command="{x:Static ApplicationCommands.Undo}" />
                    <MenuItem Command="{x:Static ApplicationCommands.Redo}" />
                    <MenuItem Command="{x:Static ApplicationCommands.SelectAll}" />
                </MenuItem>
                <MenuItem Header="TOOLS">
                    <MenuItem IsCheckable="True"
                              IsChecked="{Binding ShellService.AutomaticRefreshOn, Mode=TwoWay}">
                        <MenuItem.Header>
                            <TextBlock Text="{Binding AutoRefreshInterval, Mode=OneWay, StringFormat='{}Automatic Refresh ({0} sec)'}" />
                        </MenuItem.Header>
                    </MenuItem>
                    <Separator />
                    <MenuItem Header="Parser Editor..."
                              Command="{Binding ShellService.ShowParserEditorCommand}" />
                    <Separator />
                    <MenuItem Header="Settings..."
                              Command="{Binding ShellService.ShowSettingsCommand}" />
                </MenuItem>
                <MenuItem Header="HELP">
                    <MenuItem Header="About MQ Explorer Plus"
                              Command="{Binding ShellService.ShowAboutCommand}" />
                </MenuItem>
            </Menu>
            <ContentPresenter DockPanel.Dock="Bottom"
                              Content="{Binding ShellService.StatusInfo.StatusInfoViewModel}"
                              Height="Auto"
                              Width="Auto" />
            <ContentPresenter Content="{Binding Content.View}" />
        </DockPanel>



        <ResizeGrip 
                    VerticalAlignment="Bottom"
                    HorizontalAlignment="Right" />
    </Grid>

</Window>
