<!--
	Copyright (c) DOT Consulting scrl. All rights reserved.
	Licensed under the provided EULA. See EULA file in the solution root for full license information. 
-->
<UserControl x:Class="Dotc.MQExplorerPlus.Views.QueueListView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:wpf="http://schemas.dotconsulting.be/wpf/xaml"
             xmlns:ctl="http://schemas.dotconsulting.be/wpf/xaml/Controls"
             xmlns:mvvm="clr-namespace:Dotc.Mvvm;assembly=Dotc.Mvvm"
             xmlns:viewModels="clr-namespace:Dotc.MQExplorerPlus.Core.ViewModels;assembly=Dotc.MQExplorerPlus.Core"
             xmlns:models="clr-namespace:Dotc.MQExplorerPlus.Core.Models;assembly=Dotc.MQExplorerPlus.Core"
             xmlns:design="clr-namespace:Dotc.MQExplorerPlus.DesignTime"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             xmlns:converters="clr-namespace:Dotc.MQExplorerPlus.Converters"
             mc:Ignorable="d"
             d:DesignHeight="600"
             d:DesignWidth="1024"
             d:DataContext="{d:DesignInstance viewModels:QueueListViewModel}">
    <UserControl.Resources>
        <wpf:BindingProxy x:Key="RootDataContext"
                          Data="{Binding}" />
        <converters:CheckQueueDepthTresholdConverter x:Key="CheckQueueDepthTresholdConverter" />
    </UserControl.Resources>
    <Grid  IsEnabled="{Binding Initialized}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Ribbon Grid.Row="0"
                Style="{StaticResource CustomRibbonStyle}">
            <RibbonTab>
                <RibbonGroup Header="Content">
                    <RibbonGroup.GroupSizeDefinitions>
                        <RibbonGroupSizeDefinition IsCollapsed="False" />
                    </RibbonGroup.GroupSizeDefinitions>
                    <RibbonButton Command="{Binding ReloadCommand}"
                                  LargeImageSource="{StaticResource ReloadImageSource}"
                                  Label="Reload"
                                  Width="70" />
                </RibbonGroup>
                <RibbonGroup Header="Statistics">
                    <RibbonGroup.GroupSizeDefinitions>
                        <RibbonGroupSizeDefinition IsCollapsed="False" />
                    </RibbonGroup.GroupSizeDefinitions>
                    <RibbonButton Command="{Binding RefreshInfosCommand}"
                                  LargeImageSource="{StaticResource RefreshImageSource}"
                                  Label="Refresh F5"
                                  Width="70" />
                </RibbonGroup>
                <RibbonGroup Header="Selection">
                    <RibbonGroup.GroupSizeDefinitions>
                        <RibbonGroupSizeDefinition IsCollapsed="False" />
                    </RibbonGroup.GroupSizeDefinitions>
                    <Grid Width="70">
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <RibbonButton Grid.Row="0"
                                      SmallImageSource="{StaticResource SelectAllImageSource}"
                                      Label="All"
                                      Command="{Binding SelectAllCommand}" />
                        <RibbonButton Grid.Row="1"
                                      SmallImageSource="{StaticResource SelectNoneImageSource}"
                                      Label="None"
                                      Command="{Binding SelectNoneCommand}" />
                        <RibbonButton Grid.Row="2"
                                      SmallImageSource="{StaticResource InvertSelectionImageSource}"
                                      Label="Invert"
                                      Command="{Binding InvertSelectionCommand}" />
                    </Grid>
                    <RibbonButton Label="Get Allow"
                                  LargeImageSource="{StaticResource GetAllowImageSource}"
                                  Command="{Binding SetGetAllowCommand}" />
                    <RibbonButton Label="Get Inhibit"
                                  LargeImageSource="{StaticResource GetInhibitImageSource}"
                                  Command="{Binding SetGetInhibitCommand}" />
                    <RibbonButton Label="Put Allow"
                                  LargeImageSource="{StaticResource PutAllowImageSource}"
                                  Command="{Binding SetPutAllowCommand}" />
                    <RibbonButton Label="Put Inhibit"
                                  LargeImageSource="{StaticResource PutInhibitImageSource}"
                                  Command="{Binding SetPutInhibitCommand}" />
                    <RibbonMenuButton LargeImageSource="{StaticResource TrashcanImageSource}"
                                      Label="Clear">
                        <RibbonMenuItem Header="Delete Command"
                                        Command="{Binding EmptyWithDeleteCommand}" />
                        <RibbonMenuItem Header="Truncate Command"
                                        Command="{Binding EmptyWithTruncateCommand}" />
                    </RibbonMenuButton>
                    <RibbonButton Label="Browse"
                                  LargeImageSource="{StaticResource OpenFolderImageSource}"
                                  Command="{Binding BrowseCommand}" />
                </RibbonGroup>
                <RibbonGroup Header="Filtering"
                             LargeImageSource="{StaticResource FilteredObjectSource}">
                    <RibbonGroup.GroupSizeDefinitions>
                        <RibbonGroupSizeDefinition IsCollapsed="False" />
                    </RibbonGroup.GroupSizeDefinitions>
                    <StackPanel Orientation="Horizontal">
                        <RibbonButton LargeImageSource="{StaticResource FilteredObjectSource}"
                                      Command="{Binding ApplyFilterCommand}"
                                      Label="  Apply   (ctl-F5)"
                                      Width="70" />
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Label Grid.Column="0"
                                   Grid.Row="0">Name:</Label>
                            <Label Grid.Column="0"
                                   Grid.Row="1">Type:</Label>
                            <RibbonTextBox Grid.Column="1"
                                           Grid.Row="0"
                                           TextBoxWidth="95"
                                           Text="{Binding FilterByName, Delay=300, UpdateSourceTrigger=PropertyChanged}" />
                            <RibbonComboBox Grid.Column="1"
                                            Grid.Row="1"
                                            Margin="2 0">
                                <RibbonGallery MaxColumnCount="1"
                                               SelectedValue="{Binding FilterType, Mode=TwoWay}"
                                               SelectedValuePath="Value">
                                    <RibbonGalleryCategory x:Name="UxQueueTypesList"
                                                           DisplayMemberPath="Label" />
                                </RibbonGallery>
                            </RibbonComboBox>
                        </Grid>
                        <RibbonSeparator Width="15" />
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Label Grid.Row="0"
                                   Grid.Column="0">Get:</Label>
                            <Label Grid.Row="1"
                                   Grid.Column="0">Put:</Label>
                            <RibbonComboBox Grid.Column="1"
                                            Grid.Row="0"
                                            Margin="2 0">
                                <RibbonGallery MaxColumnCount="1"
                                               SelectedValue="{Binding FilterGetStatus, Mode=TwoWay}"
                                               SelectedValuePath="Value">
                                    <RibbonGalleryCategory x:Name="UxGetStatusList"
                                                           DisplayMemberPath="Label" />
                                </RibbonGallery>
                            </RibbonComboBox>
                            <RibbonComboBox Grid.Column="1"
                                            Grid.Row="1"
                                            Margin="2 0">
                                <RibbonGallery MaxColumnCount="1"
                                               SelectedValue="{Binding FilterPutStatus, Mode=TwoWay}"
                                               SelectedValuePath="Value">
                                    <RibbonGalleryCategory x:Name="UxPutStatusList"
                                                           DisplayMemberPath="Label" />
                                </RibbonGallery>
                            </RibbonComboBox>
                            <RibbonCheckBox Margin="10 0 0 0" Grid.Row="0"
                                            Grid.Column="2"
                                            Label=""
                                            IsChecked="{Binding FilterWithMessages}" />
                            <TextBlock Width="55"
                                       Grid.Row="0"
                                       Grid.RowSpan="2"
                                       Grid.Column="3"
                                       TextWrapping="Wrap">
                                        <Run>Only with</Run>
                                        <Run>Messages</Run></TextBlock>
                            <RibbonCheckBox Margin="10 0 0 0" Grid.Row="0"
                                            Grid.Column="4"
                                            IsEnabled="{Binding HasSystemQueues}"
                                            IsChecked="{Binding FilterIncludeSystemQueues}"
                                            Label="" />
                            <TextBlock Grid.Row="0"
                                       Grid.RowSpan="2"
                                       Grid.Column="5"
                                       Width="45"
                                       TextWrapping="Wrap">
                                        <Run>Include</Run>
                                        <Run>System</Run>
                                        <Run>Queues</Run></TextBlock>
                        </Grid>
                    </StackPanel>
                </RibbonGroup>
            </RibbonTab>
        </Ribbon>
        <ListView Grid.Row="1"
                  ItemsSource="{Binding Queues}"
                  SelectionMode="Extended"
                  SelectedItem="{Binding HighlightedQueue}"
                  PreviewKeyDown="ListView_PreviewKeyDown"
                  wpf:GridViewSort.AutoSort="True"
                  VirtualizingStackPanel.IsVirtualizing="True"
                  VirtualizingStackPanel.VirtualizationMode="Recycling">
            <ListView.Resources>
                <ContextMenu x:Key="ItemContextMenu"
                             DataContext="{Binding Path=Data, Source={StaticResource RootDataContext}}"
                             d:DataContext="{d:DesignInstance viewModels:QueueListViewModel}">
                    <MenuItem Header="Browse..."
                              FontWeight="Bold"
                              Command="{Binding SelectedBrowseCommand}" />
                    <Separator />
                    <MenuItem Header="Put Message..."
                              Command="{Binding SelectedPutMessageCommand}" />
                    <Separator />
                    <MenuItem Header="Get - Allow"
                              Command="{Binding SelectedGetAllowCommand}" />
                    <MenuItem Header="Get - Inhibit"
                              Command="{Binding SelectedGetInhibitCommand}" />
                    <Separator />
                    <MenuItem Header="Put - Allow"
                              Command="{Binding SelectedPutAllowCommand}" />
                    <MenuItem Header="Put - Inhibit"
                              Command="{Binding SelectedPutInhibitCommand}" />
                    <Separator />
                    <MenuItem Header="Clear (Delete)"
                              Command="{Binding SelectedClearWithDeleteCommand}" />
                    <MenuItem Header="Clear (Truncate)"
                              Command="{Binding SelectedClearWithTruncateCommand}" />
                </ContextMenu>
                <Style x:Key="GrayoutZeroNumberStyle"
                       TargetType="TextBlock"
                       BasedOn="{StaticResource {x:Type TextBlock}}">
                    <Style.Triggers>
                        <Trigger Property="Text"
                                 Value="0">
                            <Setter Property="Foreground"
                                    Value="LightGray" />
                            <Setter Property="FontWeight"
                                    Value="Normal" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
                <Style x:Key="QueueDepthWarningStyle"
                       BasedOn="{StaticResource GrayoutZeroNumberStyle}"
                       TargetType="TextBlock">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=DataContext.IsDepthOverThreshold, RelativeSource={RelativeSource AncestorType=ListViewItem}}"
                                     Value="True">
                            <Setter Property="Foreground"
                                    Value="Red" />
                            <Setter Property="FontWeight"
                                    Value="Bold" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ListView.Resources>
            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="HorizontalContentAlignment"
                            Value="Stretch" />
                    <EventSetter Event="PreviewMouseLeftButtonDown"
                                 Handler="ListViewItem_PreviewMouseLeftButtonDown" />
                    <EventSetter Event="MouseDoubleClick"
                                 Handler="ListViewItem_MouseDoubleClick" />
                    <Setter Property="ContextMenu"
                            Value="{StaticResource ItemContextMenu}" />
                </Style>
            </ListView.ItemContainerStyle>
            <ListView.View>
                <GridView AllowsColumnReorder="False">
                    <ctl:FixedWidthGridViewColumn FixedWidth="30"
                                                  wpf:GridViewSort.SortPropertyName="Selected">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <CheckBox IsChecked="{Binding Selected}"
                                          HorizontalAlignment="Center" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </ctl:FixedWidthGridViewColumn>
                    <GridViewColumn Header="Name"
                                    Width="250"
                                    DisplayMemberBinding="{Binding Name}"
                                    wpf:GridViewSort.SortPropertyName="Name" />
                    <ctl:FixedWidthGridViewColumn Header="Type"
                                                  FixedWidth="80"
                                                  DisplayMemberBinding="{Binding Type, Converter={StaticResource WsQueueTypeNameConverter}}"
                                                  wpf:GridViewSort.SortPropertyName="Type" />
                    <GridViewColumn Header="Depth"
                                    Width="80"
                                    wpf:GridViewSort.SortPropertyName="Depth">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Depth}"
                                           TextAlignment="Right"
                                           Style="{StaticResource QueueDepthWarningStyle}" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Header="Uncommitted"
                                    Width="80"
                                    wpf:GridViewSort.SortPropertyName="ExtendedProperties.UncommittedCount">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding ExtendedProperties.UncommittedCount}"
                                           d:DataContext="{d:DesignInstance design:QueueInfoExtDesignTime}"
                                           TextAlignment="Right"
                                           Style="{StaticResource GrayoutZeroNumberStyle}" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <ctl:FixedWidthGridViewColumn Header="Get"
                                                  FixedWidth="80"
                                                  wpf:GridViewSort.SortPropertyName="GetStatus">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock DataContext="{Binding GetStatus}"
                                           Text="{Binding}"
                                           TextAlignment="Center"
                                           Style="{StaticResource PutGetStatusHighlight}" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </ctl:FixedWidthGridViewColumn>
                    <ctl:FixedWidthGridViewColumn Header="Put"
                                                  FixedWidth="80"
                                                  wpf:GridViewSort.SortPropertyName="PutStatus">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock DataContext="{Binding PutStatus}"
                                           Text="{Binding}"
                                           TextAlignment="Center"
                                           Style="{StaticResource PutGetStatusHighlight}" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </ctl:FixedWidthGridViewColumn>
                    <GridViewColumn Header="Underlying Name"
                                    Width="250"
                                    wpf:GridViewSort.SortPropertyName="ExtendedProperties.UnderlyingName">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding ExtendedProperties.UnderlyingName}"
                                           d:DataContext="{d:DesignInstance design:QueueInfoExtDesignTime}" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Width="80"
                                    wpf:GridViewSort.SortPropertyName="ExtendedProperties.MaxDepth">
                        <GridViewColumn.Header>
                            <TextBlock Text="Max Depth"
                                       TextWrapping="Wrap"
                                       TextAlignment="Center" />
                        </GridViewColumn.Header>
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding ExtendedProperties.MaxDepth}"
                                           d:DataContext="{d:DesignInstance design:QueueInfoExtDesignTime}"
                                           TextAlignment="Right" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Width="80"
                                    wpf:GridViewSort.SortPropertyName="ExtendedProperties.OpenReadCount">
                        <GridViewColumn.Header>
                            <TextBlock Text="Open Read"
                                       TextWrapping="Wrap"
                                       TextAlignment="Center" />
                        </GridViewColumn.Header>
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding ExtendedProperties.OpenReadCount}"
                                           d:DataContext="{d:DesignInstance design:QueueInfoExtDesignTime}"
                                           TextAlignment="Right" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Width="80"
                                    wpf:GridViewSort.SortPropertyName="ExtendedProperties.OpenWriteCount">
                        <GridViewColumn.Header>
                            <TextBlock Text="Open Write"
                                       TextWrapping="Wrap"
                                       TextAlignment="Center" />
                        </GridViewColumn.Header>
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding ExtendedProperties.OpenWriteCount}"
                                           d:DataContext="{d:DesignInstance design:QueueInfoExtDesignTime}"
                                           TextAlignment="Right" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Header="Remote Queue Name"
                                    Width="150"
                                    DisplayMemberBinding="{Binding ExtendedProperties.RemoteQueueName}" />
                    <GridViewColumn Header="Remote Queue Mgr Name"
                                    Width="150"
                                    DisplayMemberBinding="{Binding ExtendedProperties.RemoteQueueManagerName}" />
                    <GridViewColumn Header="Transmission Queue"
                                    Width="150"
                                    DisplayMemberBinding="{Binding ExtendedProperties.TransmissionQueueName}" />
                </GridView>
            </ListView.View>
        </ListView>
    </Grid>
</UserControl>
